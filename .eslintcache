[{"F:\\Techbumble\\interviewapp_app\\src\\index.js":"1","F:\\Techbumble\\interviewapp_app\\src\\serviceWorker.js":"2","F:\\Techbumble\\interviewapp_app\\src\\components\\App.js":"3","F:\\Techbumble\\interviewapp_app\\src\\context\\UserContext.js":"4","F:\\Techbumble\\interviewapp_app\\src\\context\\LayoutContext.js":"5","F:\\Techbumble\\interviewapp_app\\src\\themes\\index.js":"6","F:\\Techbumble\\interviewapp_app\\src\\components\\Layout\\Layout.js":"7","F:\\Techbumble\\interviewapp_app\\src\\pages\\login\\Login.js":"8","F:\\Techbumble\\interviewapp_app\\src\\pages\\error\\Error.js":"9","F:\\Techbumble\\interviewapp_app\\src\\themes\\default.js":"10","F:\\Techbumble\\interviewapp_app\\src\\config\\index.js":"11","F:\\Techbumble\\interviewapp_app\\src\\pages\\error\\styles.js":"12","F:\\Techbumble\\interviewapp_app\\src\\pages\\login\\styles.js":"13","F:\\Techbumble\\interviewapp_app\\src\\components\\Layout\\styles.js":"14","F:\\Techbumble\\interviewapp_app\\src\\pages\\coder\\App.js":"15","F:\\Techbumble\\interviewapp_app\\src\\pages\\questions\\Questions.js":"16","F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\Charts.js":"17","F:\\Techbumble\\interviewapp_app\\src\\pages\\maps\\Maps.js":"18","F:\\Techbumble\\interviewapp_app\\src\\pages\\typography\\Typography.js":"19","F:\\Techbumble\\interviewapp_app\\src\\pages\\tables\\Tables.js":"20","F:\\Techbumble\\interviewapp_app\\src\\pages\\notifications\\Notifications.js":"21","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\Dashboard.js":"22","F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\Sidebar.js":"23","F:\\Techbumble\\interviewapp_app\\src\\components\\Header\\Header.js":"24","F:\\Techbumble\\interviewapp_app\\src\\pages\\icons\\Icons.js":"25","F:\\Techbumble\\interviewapp_app\\src\\pages\\questions\\styles.js":"26","F:\\Techbumble\\interviewapp_app\\src\\pages\\maps\\styles.js":"27","F:\\Techbumble\\interviewapp_app\\src\\pages\\typography\\styles.js":"28","F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\components\\ApexLineChart.js":"29","F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\components\\ApexHeatmap.js":"30","F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\styles.js":"31","F:\\Techbumble\\interviewapp_app\\src\\components\\Header\\styles.js":"32","F:\\Techbumble\\interviewapp_app\\src\\components\\PageTitle\\PageTitle.js":"33","F:\\Techbumble\\interviewapp_app\\src\\components\\Widget\\Widget.js":"34","F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\Dot.js":"35","F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"36","F:\\Techbumble\\interviewapp_app\\src\\pages\\icons\\styles.js":"37","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"38","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\Table\\Table.js":"39","F:\\Techbumble\\interviewapp_app\\src\\components\\Notification\\Notification.js":"40","F:\\Techbumble\\interviewapp_app\\src\\components\\UserAvatar\\UserAvatar.js":"41","F:\\Techbumble\\interviewapp_app\\src\\components\\Wrappers\\Wrappers.js":"42","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\mock.js":"43","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\styles.js":"44","F:\\Techbumble\\interviewapp_app\\src\\pages\\notifications\\styles.js":"45","F:\\Techbumble\\interviewapp_app\\src\\components\\PageTitle\\styles.js":"46","F:\\Techbumble\\interviewapp_app\\src\\components\\Widget\\styles.js":"47","F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"48","F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"49","F:\\Techbumble\\interviewapp_app\\src\\components\\UserAvatar\\styles.js":"50","F:\\Techbumble\\interviewapp_app\\src\\components\\Notification\\styles.js":"51","F:\\Techbumble\\interviewapp_app\\src\\pages\\thanks\\Thanks.js":"52","F:\\Techbumble\\interviewapp_app\\src\\pages\\thanks\\styles.js":"53","F:\\Techbumble\\interviewapp_app\\src\\pages\\coder\\Editor.js":"54","F:\\Techbumble\\interviewapp_app\\src\\hooks\\useLocalStorage.js":"55"},{"size":991,"mtime":1640628996182,"results":"56","hashOfConfig":"57"},{"size":5083,"mtime":1640423635148,"results":"58","hashOfConfig":"57"},{"size":1821,"mtime":1640423635133,"results":"59","hashOfConfig":"57"},{"size":3821,"mtime":1640618230295,"results":"60","hashOfConfig":"57"},{"size":1444,"mtime":1640423635138,"results":"61","hashOfConfig":"57"},{"size":534,"mtime":1640423635148,"results":"62","hashOfConfig":"57"},{"size":4870,"mtime":1640440806453,"results":"63","hashOfConfig":"57"},{"size":12286,"mtime":1640618230297,"results":"64","hashOfConfig":"57"},{"size":1626,"mtime":1640423635141,"results":"65","hashOfConfig":"57"},{"size":3127,"mtime":1640423635148,"results":"66","hashOfConfig":"57"},{"size":84,"mtime":1640423635138,"results":"67","hashOfConfig":"57"},{"size":1395,"mtime":1640423635142,"results":"68","hashOfConfig":"57"},{"size":3284,"mtime":1640423635144,"results":"69","hashOfConfig":"57"},{"size":710,"mtime":1640423635134,"results":"70","hashOfConfig":"57"},{"size":8169,"mtime":1640628274591,"results":"71","hashOfConfig":"57"},{"size":6406,"mtime":1640628507941,"results":"72","hashOfConfig":"57"},{"size":5790,"mtime":1640423635139,"results":"73","hashOfConfig":"57"},{"size":1010,"mtime":1640423635145,"results":"74","hashOfConfig":"57"},{"size":4632,"mtime":1640423635147,"results":"75","hashOfConfig":"57"},{"size":2146,"mtime":1640423635147,"results":"76","hashOfConfig":"57"},{"size":13862,"mtime":1640625788281,"results":"77","hashOfConfig":"57"},{"size":16126,"mtime":1640423635140,"results":"78","hashOfConfig":"57"},{"size":4849,"mtime":1640423635135,"results":"79","hashOfConfig":"57"},{"size":10486,"mtime":1640423635133,"results":"80","hashOfConfig":"57"},{"size":391433,"mtime":1640423635143,"results":"81","hashOfConfig":"57"},{"size":389,"mtime":1640423635147,"results":"82","hashOfConfig":"57"},{"size":178,"mtime":1640423635145,"results":"83","hashOfConfig":"57"},{"size":389,"mtime":1640423635148,"results":"84","hashOfConfig":"57"},{"size":1396,"mtime":1640423635140,"results":"85","hashOfConfig":"57"},{"size":1909,"mtime":1640423635139,"results":"86","hashOfConfig":"57"},{"size":1363,"mtime":1640423635136,"results":"87","hashOfConfig":"57"},{"size":4043,"mtime":1640423635134,"results":"88","hashOfConfig":"57"},{"size":447,"mtime":1640423635135,"results":"89","hashOfConfig":"57"},{"size":2581,"mtime":1640423635137,"results":"90","hashOfConfig":"57"},{"size":902,"mtime":1640423635136,"results":"91","hashOfConfig":"57"},{"size":4589,"mtime":1640423635136,"results":"92","hashOfConfig":"57"},{"size":812,"mtime":1640423635144,"results":"93","hashOfConfig":"57"},{"size":4160,"mtime":1640423635140,"results":"94","hashOfConfig":"57"},{"size":1323,"mtime":1640423635141,"results":"95","hashOfConfig":"57"},{"size":3413,"mtime":1640423635134,"results":"96","hashOfConfig":"57"},{"size":620,"mtime":1640423635137,"results":"97","hashOfConfig":"57"},{"size":3971,"mtime":1640423635138,"results":"98","hashOfConfig":"57"},{"size":4288,"mtime":1640423635141,"results":"99","hashOfConfig":"57"},{"size":3000,"mtime":1640423635141,"results":"100","hashOfConfig":"57"},{"size":1943,"mtime":1640423635146,"results":"101","hashOfConfig":"57"},{"size":482,"mtime":1640423635135,"results":"102","hashOfConfig":"57"},{"size":1015,"mtime":1640423635138,"results":"103","hashOfConfig":"57"},{"size":1474,"mtime":1640423635136,"results":"104","hashOfConfig":"57"},{"size":1075,"mtime":1640423635141,"results":"105","hashOfConfig":"57"},{"size":291,"mtime":1640423635137,"results":"106","hashOfConfig":"57"},{"size":1040,"mtime":1640423635135,"results":"107","hashOfConfig":"57"},{"size":4088,"mtime":1640628458054,"results":"108","hashOfConfig":"57"},{"size":389,"mtime":1640423635147,"results":"109","hashOfConfig":"57"},{"size":1437,"mtime":1640607849325,"results":"110","hashOfConfig":"57"},{"size":620,"mtime":1640607849323,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jdpu2o",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"116"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"F:\\Techbumble\\interviewapp_app\\src\\index.js",[],"F:\\Techbumble\\interviewapp_app\\src\\serviceWorker.js",[],["232","233"],"F:\\Techbumble\\interviewapp_app\\src\\components\\App.js",[],"F:\\Techbumble\\interviewapp_app\\src\\context\\UserContext.js",["234"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport config from '../config';\r\n\r\nvar UserStateContext = React.createContext();\r\nvar UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  console.log(state);\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true, authId: action.authId, authName: action.authName, authEmail: action.authEmail };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false, authName: null, authEmail: null };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  var [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"id_token\"),\r\n    authId: localStorage.getItem(\"authId\") ? localStorage.getItem(\"authId\") : null,\r\n    authName: localStorage.getItem(\"authName\") ? localStorage.getItem(\"authName\") : null,\r\n    authEmail: localStorage.getItem(\"authEmail\") ? localStorage.getItem(\"authEmail\") : null,\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  var context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  var context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nconst loginUser = async (dispatch, name, email, mobile, clg_name, reg_no, year_passing, history, setIsLoading, setError) => {\r\n  setError(false);\r\n  setIsLoading(true);\r\n\r\n  if (!!name && !!email && !!mobile) {\r\n    await axios(\r\n      config.baseUrl + 'signup', {\r\n      method: 'POST',\r\n      headers: {},\r\n      data: { name, email, mobile, clg_name, reg_no, year_passing },\r\n      withCredentials: null\r\n    })\r\n      .then(response => {\r\n        setTimeout(() => {\r\n          localStorage.setItem('id_token', response.data.user._id);\r\n          localStorage.setItem('authId', response.data.user._id);\r\n          localStorage.setItem('authName', response.data.user.name);\r\n          localStorage.setItem('authEmail', response.data.user.email);\r\n          setError(null)\r\n          setIsLoading(false)\r\n          dispatch({ type: 'LOGIN_SUCCESS', authId: response.data.user._id, authName: response.data.user.name, authEmail: response.data.user.email })\r\n\r\n          history.push('/app/questions')\r\n        }, 2000);\r\n      })\r\n      .catch(error => {\r\n        let errdata = {};\r\n        if (error.response.status === 400) {\r\n          errdata = {\r\n            status: error.response.status,\r\n            message: error.response.data.message,\r\n            error: error.response.data.error\r\n          }\r\n        }\r\n        dispatch({\r\n          type: 'ERROR',\r\n          errorMessage: errdata || 'Request failed!',\r\n        });\r\n      })\r\n    // setTimeout(() => {\r\n    //   localStorage.setItem('id_token', 1)\r\n    //   setError(null)\r\n    //   setIsLoading(false)\r\n    //   dispatch({ type: 'LOGIN_SUCCESS' })\r\n\r\n    //   history.push('/app/questions')\r\n    // }, 2000);\r\n  } else {\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"id_token\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","F:\\Techbumble\\interviewapp_app\\src\\context\\LayoutContext.js",[],"F:\\Techbumble\\interviewapp_app\\src\\themes\\index.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Layout\\Layout.js",["235","236","237","238","239","240","241"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport { Box, IconButton, Link } from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Tables from \"../../pages/tables\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\nimport Questions from \"../../pages/questions\";\r\nimport Editor from \"../../pages/coder\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport ThanksPage from \"../../pages/thanks/Thanks\";\r\n\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <>\r\n        <Header history={props.history} />\r\n        <Sidebar />\r\n        <div\r\n          className={classnames(classes.content, {\r\n            [classes.contentShift]: layoutState.isSidebarOpened,\r\n          })}\r\n        >\r\n          <div className={classes.fakeToolbar} />\r\n          <Switch>\r\n            <Route path=\"/app/questions\" component={Questions} />\r\n            <Route path=\"/app/thanks\" component={ThanksPage} />\r\n            <Route path=\"/app/editor\" component={Editor} />\r\n            <Route path=\"/app/dashboard\" component={Dashboard} />\r\n            <Route path=\"/app/typography\" component={Typography} />\r\n            <Route path=\"/app/tables\" component={Tables} />\r\n            <Route path=\"/app/notifications\" component={Notifications} />\r\n            <Route\r\n              exact\r\n              path=\"/app/ui\"\r\n              render={() => <Redirect to=\"/app/ui/icons\" />}\r\n            />\r\n            <Route path=\"/app/ui/maps\" component={Maps} />\r\n            <Route path=\"/app/ui/icons\" component={Icons} />\r\n            <Route path=\"/app/ui/charts\" component={Charts} />\r\n          </Switch>\r\n          {/* <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div>\r\n              <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box> */}\r\n        </div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\login\\Login.js",["242","243","244"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser } from \"../../context/UserContext\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(1);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"password\");\r\n  var [mobileValue, setMobileValue] = useState(\"\");\r\n  var [emailError, setEmailError] = useState(true);\r\n  var [collNameValue, setCollNameValue] = useState(\"\");\r\n  var [yearValue, setYearValue] = useState(\"\");\r\n  var [regValue, setRegValue] = useState(\"\");\r\n\r\n  const checkIsNumeric = value => {\r\n    return /^\\d*$/.test(value);\r\n  };\r\n\r\n  const emailValidation = email => {\r\n    if (email) {\r\n      let regex = /^([a-zA-Z0-9_.+-/$])+@(([a-zA-Z0-9-])+\\.)+([a-zA-Z0-9]{1,4})+$/;\r\n      console.log('if');\r\n      regex.test(email) ? setEmailError(false) : setEmailError(true);\r\n    } else {\r\n      console.log('false')\r\n      setEmailError(true)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src=\"https://techbumbles.com/images/techbumblebee.png\" alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}>Techbumbles</Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            {/* <Tab label=\"Login\" classes={{ root: classes.tab }} /> */}\r\n            {/* <Tab label=\"Candidate Registration\" classes={{ root: classes.tab }} /> */}\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Good Morning, User\r\n              </Typography>\r\n              <Button size=\"large\" className={classes.googleButton}>\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forget Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography variant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography variant=\"h3\" className={classes.subGreeting}>\r\n                Please Enter Your Details\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => { setLoginValue(e.target.value); emailValidation(e.target.value) }}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                inputProps={{ maxLength: 10 }}\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={mobileValue}\r\n                onChange={e => checkIsNumeric(e.target.value) ? setMobileValue(e.target.value) : ''}\r\n                margin=\"normal\"\r\n                placeholder=\"Mobile\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Select college\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={collNameValue}\r\n                onChange={e => setCollNameValue(e.target.value)}\r\n                fullWidth\r\n              >\r\n                {/* <MenuItem value=\"\">Select</MenuItem> */}\r\n                <MenuItem value=\"KSR CT\">KSR CT</MenuItem>\r\n                <MenuItem value=\"KSR CE\">KSR CE</MenuItem>\r\n                <MenuItem value=\"KSR IET\">KSR IET</MenuItem>\r\n              </TextField>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={regValue}\r\n                onChange={e => { setRegValue(e.target.value); }}\r\n                margin=\"normal\"\r\n                placeholder=\"Reg.No\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"standard-select-currency\"\r\n                select\r\n                label=\"Year of passing out\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={yearValue}\r\n                onChange={e => setYearValue(e.target.value)}\r\n                fullWidth\r\n              >\r\n                {/* <MenuItem value=\"\">Select</MenuItem> */}\r\n                <MenuItem value=\"2022\">2022</MenuItem>\r\n                <MenuItem value=\"2023\">2023</MenuItem>\r\n              </TextField>\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        nameValue,\r\n                        loginValue,\r\n                        mobileValue,\r\n                        collNameValue,\r\n                        regValue,\r\n                        yearValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      mobileValue.length === 0 ||\r\n                      nameValue.length === 0 ||\r\n                      collNameValue.length === 0 ||\r\n                      regValue.length === 0 ||\r\n                      yearValue.length === 0 ||\r\n                      emailError\r\n                    }\r\n                    size=\"large\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              {/* <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button> */}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n          © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\error\\Error.js",[],"F:\\Techbumble\\interviewapp_app\\src\\themes\\default.js",[],"F:\\Techbumble\\interviewapp_app\\src\\config\\index.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\error\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\login\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Layout\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\coder\\App.js",["245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useState, useEffect } from 'react';\r\nimport Editor from './Editor';\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport { Grid, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel, Button } from \"@material-ui/core\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport config from '../../config';\r\nimport createDOMPurify from 'dompurify'\r\nimport { JSDOM } from 'jsdom'\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst window = (new JSDOM('')).window\r\nconst DOMPurify = createDOMPurify(window)\r\n\r\nfunction App() {\r\n    const [html, setHtml] = useLocalStorage('html', '')\r\n    const [css, setCss] = useLocalStorage('css', '')\r\n    const [js, setJs] = useLocalStorage('js', '')\r\n    const [srcDoc, setSrcDoc] = useState('')\r\n    const [challengeId, setChallengeId] = useLocalStorage('challengeId', '');\r\n    const [questionId, setquestionId] = useLocalStorage('questionId','');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [status, setStatus] = useState(false);\r\n    const [challengeQues, setChallengeQues] = React.useState(false);\r\n    const [challengeSampleOut, setChallengeSampleOut] = React.useState(false);\r\n    const { authId, authEmail } = useUserState();\r\n    const history = useHistory();\r\n\r\n    const handleClickOpen = async () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const response = await axios(\r\n            config.baseUrl + `editoranswers`, {\r\n            method: 'POST',\r\n            headers: {},\r\n            data: {\r\n                \"student_id\": authId,\r\n                \"question_id\": questionId,\r\n                html,\r\n                css,\r\n                js\r\n            },\r\n            withCredentials: null\r\n        })\r\n            .then(response => {\r\n                setOpen(false);\r\n                history.push('/app/thanks')\r\n                console.log(response);\r\n            }).catch(error => { alert(\"Something went wrong !\")});\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    var Ids = [1, 2, 3];\r\n    var randomId = Ids[Math.floor(Math.random() * Ids.length)];\r\n\r\nuseEffect(() => {\r\n    async function fetchData() {\r\n        await axios(\r\n        config.baseUrl + `getcode?id=${authId}`, {\r\n        method: 'GET',\r\n        headers: {},\r\n        data: {},\r\n        withCredentials: null\r\n        })\r\n        .then(response => {\r\n            console.log(\"getcode\",response);\r\n            if(response.status === 201){\r\n            setStatus(true);\r\n            }else{\r\n            setStatus(false);\r\n            }\r\n        }).catch(error => { history.push('/app/thanks')});\r\n    }\r\n    fetchData();\r\n}, []);\r\n\r\n    useEffect(() => {\r\n        if (challengeId) {\r\n            console.log(challengeId);\r\n        } else {\r\n            setChallengeId(randomId);\r\n        }\r\n        const quesId = challengeId ? challengeId : randomId;\r\n\r\n            async function fetchData() {\r\n                const response = await axios(\r\n                    config.baseUrl + `getChallange?id=${quesId}`, {\r\n                    method: 'GET',\r\n                    headers: {},\r\n                    data: {},\r\n                    withCredentials: null\r\n                })\r\n                    .then(response => {\r\n                        setquestionId(response?.data?._id)\r\n                        setChallengeQues(response?.data?.content?.title);\r\n                        setChallengeSampleOut(response?.data?.content?.img_url);\r\n                    }).catch(error => {alert(\"Something went wrong !\") });\r\n            }\r\n            fetchData();\r\n\r\n    }, [status]);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n        }, 250)\r\n        return () => clearTimeout(timeout)\r\n    }, [html, css, js])\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={8} md={8}>{<div dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(challengeQues) }} />}</Grid>\r\n                <Grid item xs={4} md={4}>\r\n                    <h2>Sample Output:</h2>\r\n                    <br />\r\n                    <img src={challengeSampleOut} />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={2} md={2}>\r\n                    <p>Please submit! when the result is achived.</p>\r\n                </Grid>\r\n                <Grid item xs={8} md={8}>\r\n                    <Button style={{ marginLeft: 15 }} variant=\"contained\" color=\"success\" onClick={handleClickOpen}>Submit</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={6} md={6}>\r\n                    <section className=\"playground\">\r\n                        <div className=\"code-editor html-code\">\r\n                            <div className=\"editor-header\">HTML</div>\r\n                            <Editor\r\n                                language=\"xml\"\r\n                                displayName=\"HTML\"\r\n                                value={html}\r\n                                onChange={setHtml}\r\n                            />\r\n                        </div>\r\n                        <div className=\"code-editor css-code\">\r\n                            <div className=\"editor-header\">CSS</div>\r\n                            <Editor\r\n                                language=\"css\"\r\n                                displayName=\"CSS\"\r\n                                value={css}\r\n                                onChange={setCss}\r\n                            />\r\n                        </div>\r\n                        <div className=\"code-editor js-code\">\r\n                            <div className=\"editor-header\">JavaScript</div>\r\n                            <Editor\r\n                                language=\"javascript\"\r\n                                displayName=\"JS\"\r\n                                value={js}\r\n                                onChange={setJs}\r\n                            />\r\n                        </div>\r\n                    </section>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                    <section className=\"result\">\r\n                        <iframe\r\n                            className=\"iframe\"\r\n                            srcDoc={srcDoc}\r\n                            title=\"result\"\r\n                            sandbox=\"allow-scripts\"\r\n                        />\r\n                    </section>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Are you sure want to submit the Code Challenge?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\" autoFocus>\r\n                        Yes\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\questions\\Questions.js",["258","259","260","261","262","263","264","265","266","267","268","269","270","271"],"import React, { useState, useEffect } from \"react\";\r\nimport useLocalStorage from '../../hooks/useLocalStorage';\r\nimport { Grid, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport config from '../../config';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { Button } from '../../components/Wrappers';\r\nimport classnames from 'classnames';\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport NotificationsPage from \"../notifications/Notifications\";\r\n\r\nexport default function QuestionsPage() {\r\n  const history = useHistory();\r\n  const [page, setPage] = useLocalStorage('page',1);\r\n  const { authId , authEmail} = useUserState();\r\n  const [status, setStatus] = useState(false);\r\n  const [currPage, setCurrPage] = useState(1);\r\n  const [currLimit, setCurrLimit] = useState(10);\r\n  const [nextPage, setNextPage] = useState('');\r\n  const [nextLimit, setNextLimit] = useState('');\r\n  const [limit, setLimit] = useState(5);\r\n  const [allAns, setAllAns] = useState([]);\r\n  const [allTempAns, setAllTempAns] = useState([]);\r\n  const [studentAns, setStudentAns] = useState({\r\n    \"student_id\": authId,\r\n    \"answer\": allTempAns,\r\n  });\r\n\r\n  const handleChange = (event, index) => {\r\n    const { name, value, checked } = event.target;\r\n    setAllAns(prevState => ({\r\n      ...prevState,\r\n      [name]: parseInt(value)\r\n    }));\r\n    let markers = allTempAns;\r\n    markers[index] = { ...allTempAns[index], \"question_id\": name, \"answer_id\": parseInt(value) };\r\n    setAllTempAns(markers);\r\n    markers = []\r\n  };\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios(\r\n       config.baseUrl + `eligibitycheck?id=${authId}`, {\r\n       method: 'GET',\r\n       headers: {},\r\n       data: {},\r\n       withCredentials: null\r\n     })\r\n       .then(response => {\r\n         if(response.status === 201){\r\n           setStatus(true);\r\n         }else{\r\n           setStatus(false);\r\n         }\r\n       }).catch(error => { history.push('/app/thanks')});\r\n   }\r\n   fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n      async function fetchData() {\r\n        const response = await axios(\r\n          config.baseUrl + `questions?page=${page}&limit=${currLimit}`, {\r\n          method: 'GET',\r\n          headers: {},\r\n          data: {},\r\n          withCredentials: null\r\n        })\r\n          .then(response => {\r\n            setQuestions(response.data.question.result);\r\n            setNextPage(response.data.question?.next?.page || null);\r\n            setNextLimit(response.data.question?.next?.limit || null);\r\n          }).catch(error => { alert(\"Something went wrong !\")});\r\n      }\r\n      fetchData();\r\n  }, [page, currLimit]);\r\n\r\n  async function handleClick() {\r\n    if(nextPage){\r\n      const response = await axios(\r\n        config.baseUrl + 'useranswers', {\r\n        method: 'POST',\r\n        headers: {},\r\n        data: studentAns,\r\n        withCredentials: null\r\n      })\r\n        .then(response => {\r\n          setStudentAns({\r\n            \"student_id\": authId,\r\n            \"answer\": [],\r\n          });\r\n          setAllAns([]);\r\n          setAllTempAns([]);\r\n          setCurrPage(page);\r\n          setPage(nextPage);\r\n          setCurrLimit(nextLimit);\r\n        }).catch(error => {alert(\"Something went wrong !\") });\r\n    }else{\r\n      const response = await axios(\r\n        config.baseUrl + 'useranswers', {\r\n        method: 'POST',\r\n        headers: {},\r\n        data: studentAns,\r\n        withCredentials: null\r\n      })\r\n        .then(response => {\r\n          answerCheck()\r\n        }).catch(error => {alert(\"Something went wrong !\") });\r\n    }\r\n  }\r\n\r\nconst answerCheck = async()=>{\r\n  const studentAnswers = await axios(config.baseUrl + `getsubmitedanswers?id=${authId}`, {method: 'GET',withCredentials: null})\r\n  const answerCall = await axios(config.baseUrl + 'getanswers', {method: 'GET',withCredentials: null})\r\n  let arr1 = answerCall.data.answers[0].answer\r\n  let arr2 = studentAnswers.data.result.answer\r\n  let count = 0;\r\n    arr1.filter(el => {\r\n      return !arr2.find(element => {\r\n        if(element?.question_id === el?.question_id && element?.answer_id === el?.answer_id){\r\n          count +=1;\r\n        }\r\n      });\r\n    });\r\n    const response = await axios(\r\n      config.baseUrl + 'score', {\r\n      method: 'POST',\r\n      headers: {},\r\n      data: {\r\n        email : authEmail,\r\n        score : count,\r\n      },\r\n      withCredentials: null\r\n    })\r\n    history.push('/app/thanks')\r\n    return count;\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Questions\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={12}>\r\n          <Widget title=\"\" disableWidgetMenu>\r\n            {questions.map((question, index) => {\r\n              const ques_id = question?._id;\r\n              // console.log(allAns);\r\n              // console.log(allAns[ques_id]);\r\n              // console.log(question?._id);\r\n              return (\r\n                <>\r\n                  <Grid item xs={12} md={12}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">{question.content.serial_no}. {question.content.title}</FormLabel><br />\r\n                      <RadioGroup aria-label=\"gender\" name={question._id} value={allAns[ques_id] || ''} onChange={(e) => handleChange(e, index)}>\r\n                        {question.content.options.map((option) => {\r\n                          return (\r\n                            <>\r\n                              <FormControlLabel value={option.id} control={<Radio />} label={option.name} />\r\n                            </>\r\n                          );\r\n                        })}\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid><br />\r\n                </>\r\n              );\r\n            })}\r\n            {/* <button onClick={handleClick}>Next</button> */}\r\n            <Button variant=\"contained\" color={nextPage ? 'primary' : 'success'} onClick={handleClick}>{nextPage ? 'Next' : 'Submit'}</Button>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\Charts.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\maps\\Maps.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\typography\\Typography.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\tables\\Tables.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\notifications\\Notifications.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\Dashboard.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\Sidebar.js",["272","273","274","275","276","277","278"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Person as AccountIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\n// context\r\nimport { useUserState } from \"../../context/UserContext\";\r\n\r\nconst structure = [\r\n  { id: 0, label: \"Dashboard\", link: \"/app/dashboard\", icon: <HomeIcon /> },\r\n  {\r\n    id: 1,\r\n    label: \"Typography\",\r\n    link: \"/app/typography\",\r\n    icon: <TypographyIcon />,\r\n  },\r\n  { id: 2, label: \"Tables\", link: \"/app/tables\", icon: <TableIcon /> },\r\n  {\r\n    id: 3,\r\n    label: \"Notifications\",\r\n    link: \"/app/notifications\",\r\n    icon: <NotificationsIcon />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"UI Elements\",\r\n    link: \"/app/ui\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Icons\", link: \"/app/ui/icons\" },\r\n      { label: \"Charts\", link: \"/app/ui/charts\" },\r\n      { label: \"Maps\", link: \"/app/ui/maps\" },\r\n    ],\r\n  },\r\n  { id: 5, type: \"divider\" },\r\n  { id: 6, type: \"title\", label: \"HELP\" },\r\n  { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  { id: 10, type: \"divider\" },\r\n  { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  {\r\n    id: 12,\r\n    label: \"My recent\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"warning\" />,\r\n  },\r\n  {\r\n    id: 13,\r\n    label: \"Starred\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"primary\" />,\r\n  },\r\n  {\r\n    id: 14,\r\n    label: \"Background\",\r\n    link: \"\",\r\n    icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  const { authName, authEmail } = useUserState();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function () {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        {/* <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton> */}\r\n      </div>\r\n      {/* <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List> */}\r\n      <div style={{ textAlign: 'center', marginTop: 35 }}>\r\n        <AccountIcon style={{ fontSize: 70 }} classes={{ root: classes.headerIcon }} />\r\n      </div>\r\n      <h2 style={{ textAlign: 'center' }}>{authName}</h2>\r\n      <p style={{ textAlign: 'center' }}>{authEmail}</p>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","F:\\Techbumble\\interviewapp_app\\src\\components\\Header\\Header.js",["279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  MailOutline as MailIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Badge, Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton> */}\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Techbumbles\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        {/* <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div> */}\r\n        {/* <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isNotificationsUnread ? notifications.length : null}\r\n            color=\"warning\"\r\n          >\r\n            <NotificationsIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n          <Badge\r\n            badgeContent={isMailsUnread ? messages.length : null}\r\n            color=\"secondary\"\r\n          >\r\n            <MailIcon classes={{ root: classes.headerIcon }} />\r\n          </Badge>\r\n        </IconButton> */}\r\n        {/* <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton> */}\r\n        {/* <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu> */}\r\n        {/* <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu> */}\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              John Smith\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n              Flalogic.com\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem>\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\icons\\Icons.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\questions\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\maps\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\typography\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\components\\ApexLineChart.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Header\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\PageTitle\\PageTitle.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Widget\\Widget.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\Dot.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\icons\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Notification\\Notification.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\UserAvatar\\UserAvatar.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Wrappers\\Wrappers.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\mock.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\notifications\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\PageTitle\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Widget\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\UserAvatar\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\components\\Notification\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\thanks\\Thanks.js",["308","309","310","311","312","313","314","315","316"],"import React, { useState, useEffect } from \"react\";\r\nimport { Grid, FormControl, FormLabel, RadioGroup, Radio, FormControlLabel } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport config from '../../config';\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport { useUserState } from \"../../context/UserContext\";\r\nimport { Button } from '../../components/Wrappers/Wrappers';\r\nimport classnames from 'classnames';\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nexport default function ThanksPage() {\r\n\r\n  const history = useHistory();\r\n  const { authId, authEmail } = useUserState();\r\n  const [status, setStatus] = useState(false);\r\n//   const [currPage, setCurrPage] = useState(1);\r\n//   const [currLimit, setCurrLimit] = useState(5);\r\n//   const [nextPage, setNextPage] = useState('');\r\n//   const [nextLimit, setNextLimit] = useState('');\r\n//   const [limit, setLimit] = useState(5);\r\n//   const [allAns, setAllAns] = useState([]);\r\n//   const [allTempAns, setAllTempAns] = useState([]);\r\n//   const [studentAns, setStudentAns] = useState({\r\n//     \"student_id\": authId,\r\n//     \"answer\": allTempAns,\r\n//   });\r\n\r\n//   const handleChange = (event, index) => {\r\n//     const { name, value, checked } = event.target;\r\n//     console.log(name + '   ' + value);\r\n//     setAllAns(prevState => ({\r\n//       ...prevState,\r\n//       [name]: parseInt(value)\r\n//     }));\r\n//     let markers = allTempAns;\r\n//     markers[index] = { ...allTempAns[index], \"question_id\": name, \"answer_id\": parseInt(value) };\r\n//     setAllTempAns(markers);\r\n//   };\r\n\r\n//   console.log(studentAns);\r\n\r\n//   const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n       await axios(\r\n        config.baseUrl + `getcode?id=${authId}`, {\r\n        method: 'GET',\r\n        headers: {},\r\n        data:{},\r\n        withCredentials: null\r\n      })\r\n        .then(response => {\r\n          if(response.status){\r\n            setStatus(true);\r\n          }else{\r\n            setStatus(false);\r\n          }\r\n        }).catch(error => {});\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function handleClick() {\r\n    if(status){\r\n      history.push('/app/editor')\r\n    }\r\n  }\r\n\r\n// const answerCheck = async()=>{\r\n//   const studentAnswers = await axios(config.baseUrl + `getsubmitedanswers?id=${authId}`, {method: 'GET',withCredentials: null})\r\n//   const answerCall = await axios(config.baseUrl + 'getanswers', {method: 'GET',withCredentials: null})\r\n//   let arr1 = answerCall.data.answers[0].answer\r\n//   let arr2 = studentAnswers.data.result.answer\r\n//   console.log(arr1, arr2)\r\n//   let count = 0;\r\n//     arr1.filter(el => {\r\n//       return !arr2.find(element => {\r\n//         if(element.question_id === el.question_id && element.answer_id === el.answer_id){\r\n//           count +=1;\r\n//         }\r\n//       });\r\n//     });\r\n//     const response = await axios(\r\n//       config.baseUrl + 'score', {\r\n//       method: 'POST',\r\n//       headers: {},\r\n//       data: {\r\n//         email : authEmail,\r\n//         score : count,\r\n//       },\r\n//       withCredentials: null\r\n//     })\r\n//     history.push('/app/dashboard')\r\n//     return count;\r\n// }\r\n\r\n\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Results\" />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={12}>\r\n          <Widget title=\"\" disableWidgetMenu>\r\n            <h1>Thanks for submiting your answers !</h1>\r\n            <br/>\r\n            <br/>\r\n            {status ? <h2>Congrats you are eligible for next round !</h2> : <h2>We will get back to you soon.</h2>}\r\n            <br/>\r\n            <br/>\r\n            {/* <Button variant=\"contained\" color={'primary' } >Submit</Button> */}\r\n            {status && <Button variant=\"contained\" color={status ? 'success' : 'primary'} onClick={handleClick} > Code Challange</Button>}\r\n            \r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","F:\\Techbumble\\interviewapp_app\\src\\pages\\thanks\\styles.js",[],"F:\\Techbumble\\interviewapp_app\\src\\pages\\coder\\Editor.js",["317","318","319","320","321"],"import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/mode/css/css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Editor(props) {\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props\r\n  const [open, setOpen] = useState(true)\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      {/* <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen(prevOpen => !prevOpen)}\r\n        >\r\n          <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n        </button>\r\n      </div> */}\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          theme: 'material',\r\n          lineNumbers: true\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","F:\\Techbumble\\interviewapp_app\\src\\hooks\\useLocalStorage.js",[],{"ruleId":"322","replacedBy":"323"},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","severity":1,"message":"327","line":54,"column":55,"nodeType":"328","messageId":"329","endLine":54,"endColumn":64},{"ruleId":"330","severity":1,"message":"331","line":9,"column":10,"nodeType":"328","messageId":"332","endLine":9,"endColumn":13},{"ruleId":"330","severity":1,"message":"333","line":9,"column":15,"nodeType":"328","messageId":"332","endLine":9,"endColumn":25},{"ruleId":"330","severity":1,"message":"334","line":9,"column":27,"nodeType":"328","messageId":"332","endLine":9,"endColumn":31},{"ruleId":"330","severity":1,"message":"335","line":10,"column":8,"nodeType":"328","messageId":"332","endLine":10,"endColumn":12},{"ruleId":"330","severity":1,"message":"336","line":14,"column":18,"nodeType":"328","messageId":"332","endLine":14,"endColumn":30},{"ruleId":"330","severity":1,"message":"337","line":15,"column":17,"nodeType":"328","messageId":"332","endLine":15,"endColumn":28},{"ruleId":"330","severity":1,"message":"338","line":16,"column":16,"nodeType":"328","messageId":"332","endLine":16,"endColumn":26},{"ruleId":"330","severity":1,"message":"339","line":8,"column":3,"nodeType":"328","messageId":"332","endLine":8,"endColumn":6},{"ruleId":"330","severity":1,"message":"340","line":14,"column":8,"nodeType":"328","messageId":"332","endLine":14,"endColumn":18},{"ruleId":"330","severity":1,"message":"341","line":20,"column":8,"nodeType":"328","messageId":"332","endLine":20,"endColumn":12},{"ruleId":"330","severity":1,"message":"342","line":4,"column":16,"nodeType":"328","messageId":"332","endLine":4,"endColumn":27},{"ruleId":"330","severity":1,"message":"343","line":4,"column":29,"nodeType":"328","messageId":"332","endLine":4,"endColumn":38},{"ruleId":"330","severity":1,"message":"344","line":4,"column":40,"nodeType":"328","messageId":"332","endLine":4,"endColumn":50},{"ruleId":"330","severity":1,"message":"345","line":4,"column":52,"nodeType":"328","messageId":"332","endLine":4,"endColumn":57},{"ruleId":"330","severity":1,"message":"346","line":4,"column":59,"nodeType":"328","messageId":"332","endLine":4,"endColumn":75},{"ruleId":"330","severity":1,"message":"347","line":5,"column":8,"nodeType":"328","messageId":"332","endLine":5,"endColumn":17},{"ruleId":"330","severity":1,"message":"348","line":6,"column":8,"nodeType":"328","messageId":"332","endLine":6,"endColumn":14},{"ruleId":"330","severity":1,"message":"349","line":36,"column":21,"nodeType":"328","messageId":"332","endLine":36,"endColumn":30},{"ruleId":"330","severity":1,"message":"350","line":44,"column":15,"nodeType":"328","messageId":"332","endLine":44,"endColumn":23},{"ruleId":"351","severity":1,"message":"352","line":90,"column":4,"nodeType":"353","endLine":90,"endColumn":6,"suggestions":"354"},{"ruleId":"330","severity":1,"message":"350","line":101,"column":23,"nodeType":"328","messageId":"332","endLine":101,"endColumn":31},{"ruleId":"351","severity":1,"message":"355","line":116,"column":8,"nodeType":"353","endLine":116,"endColumn":16,"suggestions":"356"},{"ruleId":"357","severity":1,"message":"358","line":138,"column":21,"nodeType":"359","endLine":138,"endColumn":53},{"ruleId":"330","severity":1,"message":"360","line":8,"column":8,"nodeType":"328","messageId":"332","endLine":8,"endColumn":17},{"ruleId":"330","severity":1,"message":"340","line":15,"column":8,"nodeType":"328","messageId":"332","endLine":15,"endColumn":18},{"ruleId":"330","severity":1,"message":"361","line":17,"column":8,"nodeType":"328","messageId":"332","endLine":17,"endColumn":25},{"ruleId":"330","severity":1,"message":"362","line":23,"column":10,"nodeType":"328","messageId":"332","endLine":23,"endColumn":16},{"ruleId":"330","severity":1,"message":"363","line":24,"column":10,"nodeType":"328","messageId":"332","endLine":24,"endColumn":18},{"ruleId":"330","severity":1,"message":"364","line":28,"column":10,"nodeType":"328","messageId":"332","endLine":28,"endColumn":15},{"ruleId":"330","severity":1,"message":"365","line":28,"column":17,"nodeType":"328","messageId":"332","endLine":28,"endColumn":25},{"ruleId":"330","severity":1,"message":"366","line":37,"column":26,"nodeType":"328","messageId":"332","endLine":37,"endColumn":33},{"ruleId":"351","severity":1,"message":"352","line":68,"column":6,"nodeType":"353","endLine":68,"endColumn":8,"suggestions":"367"},{"ruleId":"330","severity":1,"message":"350","line":72,"column":15,"nodeType":"328","messageId":"332","endLine":72,"endColumn":23},{"ruleId":"330","severity":1,"message":"350","line":90,"column":13,"nodeType":"328","messageId":"332","endLine":90,"endColumn":21},{"ruleId":"330","severity":1,"message":"350","line":109,"column":13,"nodeType":"328","messageId":"332","endLine":109,"endColumn":21},{"ruleId":"368","severity":1,"message":"369","line":129,"column":33,"nodeType":"370","messageId":"371","endLine":129,"endColumn":35},{"ruleId":"330","severity":1,"message":"350","line":135,"column":11,"nodeType":"328","messageId":"332","endLine":135,"endColumn":19},{"ruleId":"330","severity":1,"message":"333","line":2,"column":18,"nodeType":"328","messageId":"332","endLine":2,"endColumn":28},{"ruleId":"330","severity":1,"message":"372","line":2,"column":30,"nodeType":"328","messageId":"332","endLine":2,"endColumn":34},{"ruleId":"330","severity":1,"message":"373","line":12,"column":16,"nodeType":"328","messageId":"332","endLine":12,"endColumn":29},{"ruleId":"330","severity":1,"message":"374","line":23,"column":8,"nodeType":"328","messageId":"332","endLine":23,"endColumn":19},{"ruleId":"330","severity":1,"message":"375","line":30,"column":3,"nodeType":"328","messageId":"332","endLine":30,"endColumn":16},{"ruleId":"330","severity":1,"message":"376","line":36,"column":7,"nodeType":"328","messageId":"332","endLine":36,"endColumn":16},{"ruleId":"330","severity":1,"message":"377","line":95,"column":7,"nodeType":"328","messageId":"332","endLine":95,"endColumn":21},{"ruleId":"330","severity":1,"message":"333","line":5,"column":3,"nodeType":"328","messageId":"332","endLine":5,"endColumn":13},{"ruleId":"330","severity":1,"message":"378","line":6,"column":3,"nodeType":"328","messageId":"332","endLine":6,"endColumn":12},{"ruleId":"330","severity":1,"message":"379","line":9,"column":3,"nodeType":"328","messageId":"332","endLine":9,"endColumn":6},{"ruleId":"330","severity":1,"message":"334","line":10,"column":3,"nodeType":"328","messageId":"332","endLine":10,"endColumn":7},{"ruleId":"330","severity":1,"message":"380","line":13,"column":11,"nodeType":"328","messageId":"332","endLine":13,"endColumn":19},{"ruleId":"330","severity":1,"message":"381","line":14,"column":18,"nodeType":"328","messageId":"332","endLine":14,"endColumn":26},{"ruleId":"330","severity":1,"message":"382","line":15,"column":24,"nodeType":"328","messageId":"332","endLine":15,"endColumn":41},{"ruleId":"330","severity":1,"message":"383","line":17,"column":13,"nodeType":"328","messageId":"332","endLine":17,"endColumn":23},{"ruleId":"330","severity":1,"message":"384","line":18,"column":11,"nodeType":"328","messageId":"332","endLine":18,"endColumn":19},{"ruleId":"330","severity":1,"message":"373","line":19,"column":16,"nodeType":"328","messageId":"332","endLine":19,"endColumn":29},{"ruleId":"330","severity":1,"message":"385","line":27,"column":10,"nodeType":"328","messageId":"332","endLine":27,"endColumn":15},{"ruleId":"330","severity":1,"message":"386","line":27,"column":29,"nodeType":"328","messageId":"332","endLine":27,"endColumn":35},{"ruleId":"330","severity":1,"message":"387","line":28,"column":8,"nodeType":"328","messageId":"332","endLine":28,"endColumn":20},{"ruleId":"330","severity":1,"message":"388","line":29,"column":8,"nodeType":"328","messageId":"332","endLine":29,"endColumn":18},{"ruleId":"330","severity":1,"message":"375","line":35,"column":3,"nodeType":"328","messageId":"332","endLine":35,"endColumn":16},{"ruleId":"330","severity":1,"message":"389","line":39,"column":7,"nodeType":"328","messageId":"332","endLine":39,"endColumn":15},{"ruleId":"330","severity":1,"message":"390","line":70,"column":7,"nodeType":"328","messageId":"332","endLine":70,"endColumn":20},{"ruleId":"330","severity":1,"message":"391","line":96,"column":7,"nodeType":"328","messageId":"332","endLine":96,"endColumn":18},{"ruleId":"330","severity":1,"message":"377","line":97,"column":7,"nodeType":"328","messageId":"332","endLine":97,"endColumn":21},{"ruleId":"330","severity":1,"message":"392","line":101,"column":8,"nodeType":"328","messageId":"332","endLine":101,"endColumn":16},{"ruleId":"330","severity":1,"message":"393","line":101,"column":18,"nodeType":"328","messageId":"332","endLine":101,"endColumn":29},{"ruleId":"330","severity":1,"message":"394","line":102,"column":8,"nodeType":"328","messageId":"332","endLine":102,"endColumn":21},{"ruleId":"330","severity":1,"message":"395","line":102,"column":23,"nodeType":"328","messageId":"332","endLine":102,"endColumn":39},{"ruleId":"330","severity":1,"message":"396","line":103,"column":8,"nodeType":"328","messageId":"332","endLine":103,"endColumn":25},{"ruleId":"330","severity":1,"message":"397","line":103,"column":27,"nodeType":"328","messageId":"332","endLine":103,"endColumn":47},{"ruleId":"330","severity":1,"message":"398","line":104,"column":8,"nodeType":"328","messageId":"332","endLine":104,"endColumn":29},{"ruleId":"330","severity":1,"message":"399","line":104,"column":31,"nodeType":"328","messageId":"332","endLine":104,"endColumn":55},{"ruleId":"330","severity":1,"message":"400","line":106,"column":8,"nodeType":"328","messageId":"332","endLine":106,"endColumn":20},{"ruleId":"330","severity":1,"message":"401","line":106,"column":22,"nodeType":"328","messageId":"332","endLine":106,"endColumn":35},{"ruleId":"330","severity":1,"message":"342","line":2,"column":16,"nodeType":"328","messageId":"332","endLine":2,"endColumn":27},{"ruleId":"330","severity":1,"message":"343","line":2,"column":29,"nodeType":"328","messageId":"332","endLine":2,"endColumn":38},{"ruleId":"330","severity":1,"message":"344","line":2,"column":40,"nodeType":"328","messageId":"332","endLine":2,"endColumn":50},{"ruleId":"330","severity":1,"message":"345","line":2,"column":52,"nodeType":"328","messageId":"332","endLine":2,"endColumn":57},{"ruleId":"330","severity":1,"message":"346","line":2,"column":59,"nodeType":"328","messageId":"332","endLine":2,"endColumn":75},{"ruleId":"330","severity":1,"message":"360","line":7,"column":8,"nodeType":"328","messageId":"332","endLine":7,"endColumn":17},{"ruleId":"330","severity":1,"message":"340","line":14,"column":8,"nodeType":"328","messageId":"332","endLine":14,"endColumn":18},{"ruleId":"330","severity":1,"message":"349","line":20,"column":19,"nodeType":"328","messageId":"332","endLine":20,"endColumn":28},{"ruleId":"351","severity":1,"message":"402","line":68,"column":6,"nodeType":"353","endLine":68,"endColumn":8,"suggestions":"403"},{"ruleId":"330","severity":1,"message":"404","line":8,"column":10,"nodeType":"328","messageId":"332","endLine":8,"endColumn":25},{"ruleId":"330","severity":1,"message":"405","line":9,"column":10,"nodeType":"328","messageId":"332","endLine":9,"endColumn":23},{"ruleId":"330","severity":1,"message":"406","line":9,"column":25,"nodeType":"328","messageId":"332","endLine":9,"endColumn":36},{"ruleId":"330","severity":1,"message":"407","line":14,"column":5,"nodeType":"328","messageId":"332","endLine":14,"endColumn":16},{"ruleId":"330","severity":1,"message":"408","line":18,"column":16,"nodeType":"328","messageId":"332","endLine":18,"endColumn":23},"no-native-reassign",["409"],"no-negated-in-lhs",["410"],"no-use-before-define","'loginUser' was used before it was defined.","Identifier","usedBeforeDefined","no-unused-vars","'Box' is defined but never used.","unusedVar","'IconButton' is defined but never used.","'Link' is defined but never used.","'Icon' is defined but never used.","'FacebookIcon' is defined but never used.","'TwitterIcon' is defined but never used.","'GithubIcon' is defined but never used.","'Tab' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'RadioGroup' is defined but never used.","'Radio' is defined but never used.","'FormControlLabel' is defined but never used.","'PageTitle' is defined but never used.","'Widget' is defined but never used.","'authEmail' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authId' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["411"],"React Hook useEffect has missing dependencies: 'challengeId', 'randomId', 'setChallengeId', and 'setquestionId'. Either include them or remove the dependency array.",["412"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useStyles' is defined but never used.","'NotificationsPage' is defined but never used.","'status' is assigned a value but never used.","'currPage' is assigned a value but never used.","'limit' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'checked' is assigned a value but never used.",["413"],"array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'List' is defined but never used.","'ArrowBackIcon' is defined but never used.","'SidebarLink' is defined but never used.","'toggleSidebar' is defined but never used.","'structure' is assigned a value but never used.","'layoutDispatch' is assigned a value but never used.","'InputBase' is defined but never used.","'Fab' is defined but never used.","'MenuIcon' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'SearchIcon' is defined but never used.","'SendIcon' is defined but never used.","'Badge' is defined but never used.","'Button' is defined but never used.","'Notification' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'notifications' is assigned a value but never used.","'layoutState' is assigned a value but never used.","'mailMenu' is assigned a value but never used.","'setMailMenu' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'setIsMailsUnread' is assigned a value but never used.","'notificationsMenu' is assigned a value but never used.","'setNotificationsMenu' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'setIsNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authId'. Either include it or remove the dependency array.",["414"],"'FontAwesomeIcon' is defined but never used.","'faCompressAlt' is defined but never used.","'faExpandAlt' is defined but never used.","'displayName' is assigned a value but never used.","'setOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"415","fix":"416"},{"desc":"417","fix":"418"},{"desc":"415","fix":"419"},{"desc":"420","fix":"421"},"Update the dependencies array to be: [authId, history]",{"range":"422","text":"423"},"Update the dependencies array to be: [challengeId, randomId, setChallengeId, setquestionId, status]",{"range":"424","text":"425"},{"range":"426","text":"423"},"Update the dependencies array to be: [authId]",{"range":"427","text":"428"},[3191,3193],"[authId, history]",[4127,4135],"[challengeId, randomId, setChallengeId, setquestionId, status]",[2335,2337],[2259,2261],"[authId]"]